plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'io.conflictradar'
version = '1.0.0'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java.srcDirs = ['src/integrationTest/java']
        resources.srcDirs = ['src/integrationTest/resources']
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'edu.stanford.nlp:stanford-corenlp:4.5.4'
    implementation 'edu.stanford.nlp:stanford-corenlp:4.5.4:models'
    implementation 'org.apache.opennlp:opennlp-tools:2.3.0'

    implementation 'org.geonames:geonames-ws-client:1.1.14'

    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'org.springframework:spring-aspects'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'

    implementation 'io.micrometer:micrometer-registry-prometheus'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.14.2'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.springframework.kafka:spring-kafka-test'
    integrationTestImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    integrationTestImplementation 'org.testcontainers:kafka:1.19.3'
    integrationTestImplementation 'org.testcontainers:elasticsearch:1.19.3'
    integrationTestImplementation 'com.github.tomakehurst:wiremock-jre8-standalone:2.35.0'
    integrationTestImplementation 'redis.clients:jedis:4.4.3'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

tasks.named('test', Test) {
    useJUnitPlatform()
    exclude '**/*IntegrationTest*'
}

check.dependsOn integrationTest

tasks.withType(Test).configureEach {
    jvmArgs = [
            '-Xmx2g',
            '-XX:+UseG1GC'
    ]
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
}